What happens when you initialize a repository? Why do you need to do it?

	When initializing a repository, a .git directory is initializes saving meta-data about different versions. You need to do it because you can have any verson control without telling git to control versions!

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is where you prepare the commits to be committed. The working directory is the actual directory you are currently in; not every file in the working directory will be a part of the commit, necessarily. The repository is the whole entire chunk of files/directories of the project. By segmenting these out, you can precisely work on whatever it is you need to without much inefficiency.

How can you use the staging area to make sure you have one commit per logical change?

	You can check the status of the staging area to ensure that all the files in there are the ones you want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	If you are trying different features/versions that you might not keep or are interested in experiementing on a larger scale, creating a branch would maintain the original version and you can rest assured that you won't lose what had been the original.